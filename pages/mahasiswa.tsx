import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import useSWR from "swr";
import { BsStar, BsThreeDotsVertical } from "react-icons/bs";
import ContentBox from "../components/ContentBox";
import Modal from "../components/Modal";
import { useState, useEffect } from "react";
import { getCookie, deleteCookie } from "cookies-next";
import { useRouter } from "next/router";
import { VscSignOut } from "react-icons/vsc";
import { IoMdClose } from "react-icons/io";
import { FiMenu } from "react-icons/fi";
import { AiOutlineMenu } from "react-icons/ai";

const Loading = () => (
  <>
    {[...Array(5)].map((e, i) => (
      <div
        key={i}
        className="relative animate-pulse flex items-center justify-center p-5 bg-gray-200 w-full h-40 rounded-md"
      />
    ))}
  </>
);

export default function Admin() {
  const fetcher = (url: string) =>
    fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        user: "mahasiswa",
      }),
    }).then((res) => res.json());
  const apiEndPoint = "https://project-api.xolusi.com/readfiles.php";
  const { data } = useSWR(apiEndPoint, fetcher);
  const [modalUrl, setModalUrl] = useState("");
  const [showDropdown, setShowDropdown] = useState(false);
  const router = useRouter();

  useEffect(() => {
    getCookie("account") !== "mahasiswa" && router.push("/");
  }, []);

  const sortedContentByType = data?.images.sort((a: string, b: string) => {
    // Extract the file extension from the `imgPath` property of each object
    const extA = a.split(".").pop();
    const extB = b.split(".").pop();

    // Define a mapping of file extensions to document types
    const docTypes: { [extension: string]: string } = {
      png: "1_image",
      webp: "1_image",
      jpeg: "1_image",
      pdf: "2_pdf",
      docx: "3_document",
      xlsx: "4_spreadsheet",
      mp4: "video",
      mp3: "audio",
    };

    // Use the mapping to get the document type for each object
    const typeA = extA ? docTypes[extA] : "unknown";
    const typeB = extB ? docTypes[extB] : "unknown";

    // Compare the document types and return a value based on the result
    if (typeA < typeB) {
      return -1;
    }
    if (typeA > typeB) {
      return 1;
    }
    return 0;
  });

  return (
    <div className="relative flex flex-col h-screen md:px-[18%] overflow-hidden bg-gray-200 ">
      <Head>
        <title>Distribusi Konten Digital UNDIPA</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex items-center bg-gray-700  text-white justify-between px-4 py-2">
        <h1 className="text-xl font-semibold">Konten khusus Mahasiswa</h1>
        {/* action menu */}
        <div className="relative inline-block text-left">
          <div>
            <button
              type="button"
              className={`p-3 rounded-full bg-opacity-5 ${
                showDropdown && "bg-gray-300 "
              }`}
              onClick={() => setShowDropdown(!showDropdown)}
              id="menu-button"
              aria-expanded="true"
              aria-haspopup="true"
            >
              {showDropdown ? (
                <IoMdClose size={18} />
              ) : (
                <AiOutlineMenu size={24} />
              )}
            </button>
          </div>
          <div
            className={`${
              !showDropdown && "hidden"
            } flex flex-col text-gray-700 px-2 items-center justify-between absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none`}
            role="menu"
            aria-orientation="vertical"
            aria-labelledby="menu-button"
            tabIndex={-1}
          >
            <Link
              href={"/rating-aplikasi"}
              className="flex justify-between items-center w-full"
            >
              <button className="block w-full py-2 text-right text-sm mr-1">
                Rating Aplikasi
              </button>
              <BsStar className="text-xl" />
            </Link>
            <button
              onClick={() => {
                deleteCookie("account");
                router.push("/");
              }}
              className="flex justify-between items-center  w-full"
            >
              <button className="block w-full py-2 text-right text-sm mr-1">
                Keluar
              </button>
              <VscSignOut className="text-xl" />
            </button>
          </div>
        </div>
      </div>
      {modalUrl !== "" && (
        <Modal
          mutateEndPoint={apiEndPoint}
          setModalUrl={setModalUrl}
          path={modalUrl}
        />
      )}
      {/* konten */}
      <div className="h-full bg-gray-50 overflow-y-auto bg-logo-background bg-no-repeat bg-contain bg-center">
        <div className="grid place-items-start md:grid-cols-5 p-4 grid-cols-3 w-full gap-2 h-fit overflow-y-auto">
          {!data ? (
            <Loading />
          ) : (
            sortedContentByType?.map((imgPath: string, i: number) => (
              <ContentBox
                key={i}
                setModalUrl={setModalUrl}
                path={imgPath}
                index={i}
              />
            ))
          )}
        </div>
      </div>
    </div>
  );
}
